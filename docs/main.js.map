{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["module.exports = \"<div>\\r\\n  <h1>Cruel Word Search</h1>\\r\\n  <input [(ngModel)]=\\\"width\\\" placeholder=\\\"width\\\" size=\\\"4\\\">X<input [(ngModel)]=\\\"height\\\" placeholder=\\\"height\\\" size=\\\"4\\\"><br>\\r\\n  <input [(ngModel)]=\\\"word\\\" placeholder=\\\"enter word\\\">\\r\\n  <button (click)=\\\"generate()\\\">Generate</button>\\r\\n  <p>{{word}} occurs {{count}} times</p>\\r\\n  <table>\\r\\n      <tr *ngFor=\\\"let row of data.data\\\">\\r\\n          <td *ngFor=\\\"let column of row\\\">{{column}}</td>\\r\\n      </tr>\\r\\n  </table>\\r\\n</div>\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","//our root app component\r\nimport { Component, NgModule, VERSION } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nexport type PlacementFunction = ((word:string, x: number, y: number, rows: Table, keyWord: string) => boolean);\r\n\r\nexport class Table {\r\n    public static readonly nbsp = '\\u00A0';\r\n\r\n    public rows: number;\r\n    public columns: number;\r\n    public data: Array<Array<string>>;\r\n\r\n    public constructor(rows: number, columns: number) {\r\n        this.resize(rows, columns);\r\n    }\r\n\r\n    public resize(rows: number, columns: number) {\r\n        this.rows = rows;\r\n        this.columns = columns;\r\n        this.data = new Array<Array<string>>(this.rows);\r\n        for (let i = 0; i < this.rows; i++) {\r\n            this.data[i] = new Array<string>(this.columns);\r\n            for (let j = 0; j < this.columns; j++) {\r\n                this.data[i][j] = Table.nbsp;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n    public word: string;\r\n    public width: number;\r\n    public height: number;\r\n    public retryCount: number;\r\n    public count: number;\r\n    public data: Table;\r\n\r\n    constructor() {\r\n        this.width = 10;\r\n        this.height = 10;\r\n        this.word = '';\r\n        this.retryCount = 20;\r\n        this.data = new Table(this.height, this.width);\r\n    }\r\n    \r\n    public static random(lowerBound: number, upperBound: number): number {\r\n        return Math.floor(Math.random() * (upperBound - lowerBound)) + lowerBound;\r\n    }\r\n\r\n    public static placeLetters(word: string, x: number, y: number, table: Table, xDir: number, yDir: number, keyWord: string): boolean {\r\n        let width = table.columns;\r\n        let height = table.rows;\r\n\r\n        let xEnd = x + word.length * xDir;\r\n        let yEnd = y + word.length * yDir;\r\n\r\n        let xStart = x;\r\n        if (xStart > xEnd) {\r\n            xStart = xEnd;\r\n            xEnd = x;\r\n        }\r\n\r\n        let yStart = y;\r\n        if (yStart > yEnd) {\r\n            yStart = yEnd;\r\n            yEnd = y;\r\n        }\r\n\r\n        if (xStart < 0 || yStart < 0 || xEnd >= width || yEnd >= height) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < word.length; i++) {\r\n            if (table.data[y + i * yDir][x + i * xDir] != Table.nbsp)\r\n                return false;\r\n        }\r\n        for (let i = 0; i < word.length; i++) {\r\n            let char = word.substr(i, 1);\r\n            table.data[y + i * yDir][x + i * xDir] = char;\r\n        }\r\n        if (AppComponent.totalWordCount(keyWord, table) > 1) {\r\n            for (let i = 0; i < word.length; i++) {\r\n                table.data[y + i * yDir][x + i * xDir] = Table.nbsp;\r\n            }\r\n            return false\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static placeLtR(word: string, x: number, y: number, table: Table, keyWord: string): boolean {\r\n        return AppComponent.placeLetters(word, x, y, table, 1, 0, keyWord);\r\n    }\r\n\r\n    public static placeRtL(word: string, x: number, y: number, table: Table, keyWord: string): boolean {\r\n        return AppComponent.placeLetters(word, x, y, table, -1, 0, keyWord);\r\n    }\r\n\r\n    public static placeTtB(word: string, x: number, y: number, table: Table, keyWord: string): boolean {\r\n        return AppComponent.placeLetters(word, x, y, table, 0, 1, keyWord);\r\n    }\r\n\r\n    public static placeBtT(word: string, x: number, y: number, table: Table, keyWord: string): boolean {\r\n        return AppComponent.placeLetters(word, x, y, table, 0, -1, keyWord);\r\n    }\r\n\r\n    public static placeDDR(word: string, x: number, y: number, table: Table, keyWord: string): boolean {\r\n        return AppComponent.placeLetters(word, x, y, table, 1, 1, keyWord);\r\n    }\r\n\r\n    public static placeDDL(word: string, x: number, y: number, table: Table, keyWord: string): boolean {\r\n        return AppComponent.placeLetters(word, x, y, table, -1, 1, keyWord);\r\n    }\r\n\r\n    public static placeDUR(word: string, x: number, y: number, table: Table, keyWord: string): boolean {\r\n        return AppComponent.placeLetters(word, x, y, table, 1, -1, keyWord);\r\n    }\r\n\r\n    public static placeDUL(word: string, x: number, y: number, table: Table, keyWord: string): boolean {\r\n        return AppComponent.placeLetters(word, x, y, table, -1, -1, keyWord);\r\n    }\r\n\r\n    public static listAlgorithms(length: number, width: number, height: number): PlacementFunction[] {\r\n        let arrangements = new Array<PlacementFunction>();\r\n        let canHorizontal = length <= width;\r\n        let canVertical = length <= height;\r\n        if (canHorizontal) {\r\n            arrangements.push(AppComponent.placeLtR);\r\n            arrangements.push(AppComponent.placeRtL);\r\n            if (canVertical) {\r\n                arrangements.push(AppComponent.placeDDL);\r\n                arrangements.push(AppComponent.placeDDR);\r\n                arrangements.push(AppComponent.placeDUL);\r\n                arrangements.push(AppComponent.placeDUR);\r\n            }\r\n        }\r\n        if (canVertical) {\r\n            arrangements.push(AppComponent.placeTtB);\r\n            arrangements.push(AppComponent.placeBtT);\r\n        }\r\n        return arrangements;\r\n    }\r\n\r\n    public static placeWord(word: string, algs: PlacementFunction[], table: Table, keyWord: string): boolean {\r\n        let x = AppComponent.random(0, table.columns);\r\n        let y = AppComponent.random(0, table.rows);\r\n        let alg = AppComponent.random(0, algs.length);\r\n        return algs[alg](word, x, y, table, keyWord);\r\n    }\r\n\r\n    public static placeWordPart(word: string, algs: PlacementFunction[], table: Table, minLength: number, maxLength: number): number {\r\n        let segmentLength = AppComponent.random(minLength, maxLength + 1);\r\n        let segmentStart = AppComponent.random(0, word.length - segmentLength + 1);\r\n        let segment = word.substr(segmentStart, segmentLength);\r\n        if (AppComponent.placeWord(segment, algs, table, word)) {\r\n            return segment.length;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    public static findWordInDirection(word: string, xStart: number, yStart: number, xDir: number, yDir: number, table: Table): boolean {\r\n        if (word.length == 0)\r\n            return false;\r\n        for (let i = 0; i < word.length; i++) {\r\n            let x = xStart + i * xDir;\r\n            let y = yStart + i * yDir;\r\n            if (x < 0 || x >= table.columns || y < 0 || y >= table.rows || table.data[y][x] != word.substr(i, 1))\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    public static findWord(word: string, x: number, y: number, table: Table): number {\r\n        let count = 0;\r\n        for (let xDir = -1; xDir <= 1; xDir++) {\r\n            for (let yDir = -1; yDir <= 1; yDir++) {\r\n                if (AppComponent.findWordInDirection(word, x, y, xDir, yDir, table)) {\r\n                    count++;\r\n                }\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    public static totalWordCount(word: string, table: Table): number {\r\n        let count = 0;\r\n        for (let i = 0; i < table.rows; i++) {\r\n            for (let j = 0; j < table.columns; j++) {\r\n                count += AppComponent.findWord(word, j, i, table);\r\n            }\r\n        }\r\n        return count;\r\n    }\r\n\r\n    generate() {\r\n        this.data.resize(this.height, this.width);\r\n        this.word = this.word.toUpperCase();\r\n        let arrangements = AppComponent.listAlgorithms(this.word.length, this.width, this.height);\r\n        for (let i = 0; i < this.retryCount; i++) {\r\n            if (AppComponent.placeWord(this.word, arrangements, this.data, '')) {\r\n                break;\r\n            }\r\n        }\r\n        let remaining = this.width * this.height - this.word.length;\r\n        let min = 2;\r\n        let max = this.word.length - 1;\r\n        let attemptMax = this.width * this.height * 100;\r\n        for (let i = 0; i < attemptMax && remaining > 0; i++) {\r\n            remaining -= AppComponent.placeWordPart(this.word, arrangements, this.data, min, max);\r\n        }\r\n        for (let i = 0; i < attemptMax && remaining > 0; i++) {\r\n            remaining -= AppComponent.placeWordPart(this.word, arrangements, this.data, 1, 1);\r\n        }\r\n        this.count = AppComponent.totalWordCount(this.word, this.data);\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule } from '@angular/forms'\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule, FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n"],"sourceRoot":""}